##################################################################################
# PROJECT
# Project names should contain only lowercase characters and underscores. 
# Do not modify the version and config-version below.
##################################################################################
name: 'my_project_name'
version: '1.0.0'
config-version: 2

###################################################################################
# PROFILE
# This setting configures which "profile" dbt uses for this project. 
# In dbt Cloud IDE, this field is unused. However, it is critical with DBT Core.
###################################################################################
profile: 'my_project_profile'

###################################################################################
# VARIABLES 
# For use in models or other objects, or to control packages in the project
###################################################################################
vars:
  start_date: '2016-06-01'
  proj_env: "{{ env_var('DBT_ENVIRONMENT') }}"
  proj_key: "{{ env_var('DBT_KEY') }}"
  proj_db: |
    {% if  env_var('DBT_ENVIRONMENT') == "sandbox" -%} DBT_DEMO_PROJECT 
    {% elif  env_var('DBT_ENVIRONMENT') == "dev" -%} DBT_DEMO_PROJECT
    {% elif  env_var('DBT_ENVIRONMENT') == "stage" -%} DBT_DEMO_PROJECT_STG
    {% elif  env_var('DBT_ENVIRONMENT') == "prod" -%} DBT_DEMO_PROJECT_PROD
    {%- endif -%}    
  proj_schema_transform: |
    {% if  env_var('DBT_ENVIRONMENT') == "sandbox" -%} {{target.user}}_TRANSFORM
    {%- else -%} TRANSFORM
    {%- endif -%}  
  proj_schema_data_product: |
    {% if  env_var('DBT_ENVIRONMENT') == "sandbox" -%} {{target.user}}_DATA_PRODUCT
    {%- else -%} DATA_PRODUCT
    {%- endif -%}  

   # Enables the package DBT_CONSTRAINTS. Package details: https://hub.getdbt.com/snowflake-labs/dbt_constraints/latest/
  dbt_constraints_enabled: false
  # The DBT_CONSTRAINTS package can also add constraints on sources if you have sufficient privileges
  dbt_constraints_sources_enabled: false
  'dbt_date:time_zone': 'America/New_York'

#query-comment: "{{marc_query_comment}}"
#  comment: '{{ dbt_snowflake_monitoring.get_query_comment(node) }}'
#  append: true # Snowflake removes prefixed comments
    
###################################################################################      
# FILE PATHS & HOOKS
# These configurations specify where dbt should look for different types of files
# and any hooks to execute at start or end of a project run or build. 
###################################################################################

macro-paths: ["managed_assets/packages/fitb_dbt_utils/macros","data_project_assets/macros"]
model-paths: ["data_project_assets/models"]
test-paths: ["data_project_assets/tests"]
#analysis-paths: ["data_project_assets/analyses"] #Path commented so analyses sql files are not compiled during DBT BUILD runs
seed-paths: ["data_project_assets/seeds"]
snapshot-paths: ["managed_assets/snapshots"]
log-path: "logs"
packages-install-path: "managed_assets/packages"
target-path: "data_project_assets/target"   # directory which will store compiled SQL files


clean-targets:         # directories to be removed by `dbt clean`
  - "data_project_assets/target"
  - "target"
  - "managed_assets/packages"


dispatch:
  - macro_namespace: dbt
    search_order: ['my_project_name', 'dbt_snowflake_monitoring', 'fitb_dbt_utils', 'dbt_project_evaluator', 'dbt']
  - macro_namespace: dbt_utils
    search_order: ['my_project_name', 'fitb_dbt_utils', 'dbt_utils']



################################################################################### 
# PROJECT RESOURCES 
################################################################################### 

# Configuring models. Full documentation: https://docs.getdbt.com/docs/configuring-models
# For model config, we tell dbt how to build the models, where to build them and which Snowflake warehouse to use. 
# NOTE: These settings can be overridden in the individual model files using the `{{ config(...) }}` macro. 
# NOTE: if you rename the project at the beginning of this yaml file, you must rename it below, too. 

models:
  my_project_name:    
    database: "{{ env_var('DBT_DATABASE') }}"
    +copy_grants: true
    +persist_docs:
      relation: true
      columns: true
    +transient: false  # Ensures models generated by DBT are not defined as transient in Snowflake
    1_transform:
#      schema: transform 
      materialized: table
      schema: |
        {% if  env_var('DBT_ENVIRONMENT') == "sandbox" -%} {{target.user}}_transform
        {%- else -%} transform
        {%- endif -%}

    2_data_product:
#      schema: data_product 
      materialized: view
      schema: |
        {% if  env_var('DBT_ENVIRONMENT') == "sandbox" -%} {{target.user}}_data_product
        {%- else -%} DATA_PRODUCT
        {%- endif -%}



#  dbt_snowflake_monitoring:
#    +database: DBT_DEMO_METADATA # optional, default is your target database
#    +schema: MONITORING # optional, default is your target schema
#    staging:
#      +database: DBT_DEMO_METADATA # optional, default is your target database
#      +schema: MONITORING_STAGE # optional, default is your target schema

seeds:
  +schema: sandbox_seeds
  materialized: seed  

#sources:
#  fitb_tech_transformation: 
#    raw: 
#      +enabled: true

 
sources:
  fitb_tech_transformation: 
    raw: 
    database: "{{env_var('DBT_DATABASE')}}"
#    schema: raw 
#      +enabled: true
